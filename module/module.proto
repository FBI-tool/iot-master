syntax = "proto3";
option go_package = "./module";

package module;

import "google/protobuf/any.proto";

/* 通用定义 */

message Empty {}

message String {
  string value = 1;
}

message Int64 {
  int64 value = 1;
}

message Buffer {
  bytes value = 1;
}

message Stream {
  int64 id = 1;
  bytes buffer = 2;
}

message Response {
  bool ok = 1;
  string error = 2;
  bytes data = 3;
}

message List {
  string keyword = 1;
  int64 skip = 2;
  int64 limit = 3;
}

message ListResponse {
  bool ok = 1;
  string error = 2;
  repeated bytes data = 3;
}


message Event {
  string event = 1;
  bytes data = 2;
}


message Module {
  string id = 1;
  string key = 2; //证书
  string name = 3;
  string version = 4;

  reserved 5 to 9;

  //string command = 9;
  string entrypoint = 10;
  string web = 11;
  string rpc = 12;
  map<string, string> dependencies = 13;

}


service module {
  rpc register(Module) returns (Response) {}
  rpc unregister(String) returns (Response) {}
}

service session {
  rpc create(String) returns (Response) {}
  rpc get(String) returns (Response) {}
  rpc delete(String) returns (Response) {}
}

service tunnel {
  rpc list(List) returns (ListResponse) {}
  rpc get(Int64) returns (Response) {}
  rpc open(Int64) returns (Response) {}
  rpc close(Int64) returns (Response) {}
  rpc pipe(stream Stream) returns (stream Stream) {}
}

service server {
  rpc list(List) returns (ListResponse) {}
  rpc get(Int64) returns (Response) {}
  rpc open(Int64) returns (Response) {}
  rpc close(Int64) returns (Response) {}
}

service product {
  rpc list(List) returns (ListResponse) {}
  rpc get(String) returns (Response) {}
  rpc import(stream Buffer) returns (Response) {}
  rpc export(String) returns (stream Buffer) {}
}

service device {
  rpc list(List) returns (ListResponse) {}
  rpc get(Int64) returns (Response) {}
  rpc open(Int64) returns (Response) {}
  rpc close(Int64) returns (Response) {}
}

service project {
  rpc list(List) returns (ListResponse) {}
  rpc get(Int64) returns (Response) {}
  rpc open(Int64) returns (Response) {}
  rpc close(Int64) returns (Response) {}
  rpc import(stream Buffer) returns (Response) {}
  rpc export(String) returns (stream Buffer) {}
}


