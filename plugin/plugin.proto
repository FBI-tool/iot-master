syntax = "proto3";
option go_package = "./plugin";

package module;


/* 模型定义 */

message Empty {}

message String {
  string value = 1;
}

message Id {
  uint64 value = 1;
}

message Buffer {
  bytes value = 1;
}

message List {
  string keyword = 1;
  uint64 skip = 2;
  uint64 limit = 3;
}

message ProjectCommand {
  repeated string targets = 1;
  string command = 2;
  repeated double arguments = 3;
}

message DeviceCommand {
  uint64 id = 1;
  string command = 2;
  repeated double arguments = 3;
}

message Event {
  string event = 1;
  bytes data = 2;
}


/* 接口定义 */
service module {
  rpc register(Buffer) returns (Empty) {}
  rpc unregister(String) returns (Empty) {}
}

service session {
  rpc create(String) returns (Empty) {}
  rpc get(String) returns (Buffer) {}
  rpc delete(String) returns (Empty) {}
}

service tunnel {
  rpc list(List) returns (Buffer) {}
  rpc get(Id) returns (Buffer) {}
  rpc open(Id) returns (Empty) {}
  rpc close(Id) returns (Empty) {}
  rpc enable(Id) returns (Empty) {}
  rpc disable(Id) returns (Empty) {}
  rpc pipe(stream Buffer) returns (stream Buffer) {}
}

service server {
  rpc list(List) returns (Buffer) {}
  rpc get(Id) returns (Buffer) {}
  rpc open(Id) returns (Empty) {}
  rpc close(Id) returns (Empty) {}
  rpc enable(Id) returns (Empty) {}
  rpc disable(Id) returns (Empty) {}
}

service product {
  rpc list(List) returns (Buffer) {}
  rpc get(String) returns (Buffer) {}
  rpc import(stream Buffer) returns (Empty) {}
  rpc export(String) returns (stream Buffer) {}
}

service device {
  rpc list(List) returns (Buffer) {}
  rpc get(Id) returns (Buffer) {}
  rpc open(Id) returns (Empty) {}
  rpc close(Id) returns (Empty) {}
  rpc enable(Id) returns (Empty) {}
  rpc disable(Id) returns (Empty) {}
  rpc refresh(Id) returns (Empty) {}
  rpc context(Id) returns (Buffer) {}
  rpc execute(DeviceCommand) returns (Empty) {}
}

service project {
  rpc list(List) returns (Buffer) {}
  rpc get(Id) returns (Buffer) {}
  rpc open(Id) returns (Empty) {}
  rpc close(Id) returns (Empty) {}
  rpc enable(Id) returns (Empty) {}
  rpc disable(Id) returns (Empty) {}
  rpc context(Id) returns (Buffer) {}
  rpc execute(ProjectCommand) returns (Empty) {}
  rpc import(stream Buffer) returns (Empty) {}
  rpc export(String) returns (stream Buffer) {}
}


